\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8\relax}]
\PYG{k+kn}{import} \PYG{n+nn}{numpy} \PYG{k}{as} \PYG{n+nn}{np}
\PYG{k+kn}{from} \PYG{n+nn}{typing} \PYG{k+kn}{import} \PYG{n}{List}

\PYG{k}{def} \PYG{n+nf}{sigmoid}\PYG{p}{(}\PYG{n}{x}\PYG{p}{):}
    \PYG{k}{return} \PYG{l+m+mf}{1.0}\PYG{o}{/}\PYG{p}{(}\PYG{l+m+mf}{1.0} \PYG{o}{+} \PYG{n}{np}\PYG{o}{.}\PYG{n}{exp}\PYG{p}{(}\PYG{o}{\PYGZhy{}}\PYG{n}{x}\PYG{p}{))}

\PYG{k}{class} \PYG{n+nc}{NeuralNetwork}\PYG{p}{:}

    \PYG{n}{layers\PYGZus{}sizes} \PYG{o}{=} \PYG{p}{[]}
    \PYG{n}{weights} \PYG{o}{=} \PYG{p}{[]}
    \PYG{n}{biases} \PYG{o}{=} \PYG{p}{[]}
    \PYG{n}{activation\PYGZus{}function} \PYG{o}{=} \PYG{k+kc}{None}

    \PYG{k}{def} \PYG{n+nf+fm}{\PYGZus{}\PYGZus{}init\PYGZus{}\PYGZus{}}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{layers\PYGZus{}sizes}\PYG{p}{:}\PYG{n}{List}\PYG{p}{[}\PYG{n+nb}{int}\PYG{p}{])} \PYG{o}{\PYGZhy{}\PYGZgt{}} \PYG{k+kc}{None}\PYG{p}{:}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{biases} \PYG{o}{=} \PYG{p}{[}\PYG{n}{np}\PYG{o}{.}\PYG{n}{random}\PYG{o}{.}\PYG{n}{randn}\PYG{p}{(}\PYG{n}{i}\PYG{p}{,} \PYG{l+m+mi}{1}\PYG{p}{)} \PYG{k}{for} \PYG{n}{i} \PYG{o+ow}{in} \PYG{n}{layers\PYGZus{}sizes}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{:]]}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{weights} \PYG{o}{=} \PYG{p}{[}\PYG{n}{np}\PYG{o}{.}\PYG{n}{random}\PYG{o}{.}\PYG{n}{randn}\PYG{p}{(}\PYG{n}{i}\PYG{p}{,} \PYG{n}{j}\PYG{p}{)} \PYG{k}{for} \PYG{p}{(}\PYG{n}{i}\PYG{p}{,} \PYG{n}{j}\PYG{p}{)} \PYG{o+ow}{in} \PYG{n+nb}{zip}\PYG{p}{(}\PYG{n}{layers\PYGZus{}sizes}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{:],} \PYG{n}{layers\PYGZus{}sizes}\PYG{p}{[:}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{])]}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{activation\PYGZus{}function} \PYG{o}{=} \PYG{n}{sigmoid}
        \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{layers\PYGZus{}sizes} \PYG{o}{=} \PYG{n}{layers\PYGZus{}sizes}

    \PYG{k}{def} \PYG{n+nf}{feedforward}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{activation}\PYG{p}{):}
        \PYG{k}{for} \PYG{n}{w}\PYG{p}{,} \PYG{n}{b} \PYG{o+ow}{in} \PYG{n+nb}{zip}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{weights}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{biases}\PYG{p}{):}
            \PYG{n}{activation} \PYG{o}{=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{activation\PYGZus{}function}\PYG{p}{(}\PYG{n}{np}\PYG{o}{.}\PYG{n}{dot}\PYG{p}{(}\PYG{n}{w}\PYG{p}{,} \PYG{n}{activation}\PYG{p}{)} \PYG{o}{+} \PYG{n}{b}\PYG{p}{)}
        \PYG{k}{return} \PYG{n}{activation}

\PYG{+w}{    }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{    def to\PYGZus{}genome(self) \PYGZhy{}\PYGZgt{} List[float]:}
\PYG{l+s+sd}{        genome = []}
\PYG{l+s+sd}{        for w in self.weights:}
\PYG{l+s+sd}{            for line in w:}
\PYG{l+s+sd}{                for c in line:}
\PYG{l+s+sd}{                    genome.append(c)}
\PYG{l+s+sd}{        for b in self.biases:}
\PYG{l+s+sd}{            for c in b:}
\PYG{l+s+sd}{                genome.append(c)}
\PYG{l+s+sd}{        return genome}
\PYG{l+s+sd}{    \PYGZdq{}\PYGZdq{}\PYGZdq{}}

    \PYG{k}{def} \PYG{n+nf}{to\PYGZus{}genome}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{)} \PYG{o}{\PYGZhy{}\PYGZgt{}} \PYG{n}{List}\PYG{p}{[}\PYG{n+nb}{float}\PYG{p}{]:}
        \PYG{n}{genome} \PYG{o}{=} \PYG{n}{np}\PYG{o}{.}\PYG{n}{concatenate}\PYG{p}{([}\PYG{n}{w}\PYG{o}{.}\PYG{n}{flatten}\PYG{p}{()} \PYG{k}{for} \PYG{n}{w} \PYG{o+ow}{in} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{weights}\PYG{p}{]} \PYG{o}{+} \PYG{p}{[}\PYG{n}{b}\PYG{o}{.}\PYG{n}{flatten}\PYG{p}{()} \PYG{k}{for} \PYG{n}{b} \PYG{o+ow}{in} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{biases}\PYG{p}{])}
        \PYG{k}{return} \PYG{n}{genome}\PYG{o}{.}\PYG{n}{tolist}\PYG{p}{()}

    \PYG{n+nd}{@classmethod}
    \PYG{k}{def} \PYG{n+nf}{from\PYGZus{}genome}\PYG{p}{(}\PYG{n+nb+bp}{cls}\PYG{p}{,} \PYG{n}{genome}\PYG{p}{:} \PYG{n}{List}\PYG{p}{[}\PYG{n+nb}{float}\PYG{p}{],} \PYG{n}{layers}\PYG{p}{:} \PYG{n}{List}\PYG{p}{[}\PYG{n+nb}{int}\PYG{p}{]):}
        \PYG{k}{assert} \PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{layers}\PYG{p}{)} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{0}
        \PYG{n}{nn} \PYG{o}{=} \PYG{n+nb+bp}{cls}\PYG{p}{(}\PYG{n}{layers}\PYG{p}{)}
        \PYG{c+c1}{\PYGZsh{} this code is more efficient than the commented code below because it avoids the list inversions}
        \PYG{n}{offset} \PYG{o}{=} \PYG{l+m+mi}{0}
        \PYG{k}{for} \PYG{n}{i}\PYG{p}{,} \PYG{p}{(}\PYG{n}{j}\PYG{p}{,} \PYG{n}{k}\PYG{p}{)} \PYG{o+ow}{in} \PYG{n+nb}{enumerate}\PYG{p}{(}\PYG{n+nb}{zip}\PYG{p}{(}\PYG{n}{layers}\PYG{p}{[:}\PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{],} \PYG{n}{layers}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{:])):}
            \PYG{n}{nn}\PYG{o}{.}\PYG{n}{weights}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]} \PYG{o}{=} \PYG{n}{np}\PYG{o}{.}\PYG{n}{reshape}\PYG{p}{(}\PYG{n}{genome}\PYG{p}{[}\PYG{n}{offset}\PYG{p}{:}\PYG{n}{offset} \PYG{o}{+} \PYG{n}{j} \PYG{o}{*} \PYG{n}{k}\PYG{p}{],} \PYG{p}{(}\PYG{n}{k}\PYG{p}{,} \PYG{n}{j}\PYG{p}{))}
            \PYG{n}{offset} \PYG{o}{+=} \PYG{n}{j} \PYG{o}{*} \PYG{n}{k}
        \PYG{k}{for} \PYG{n}{i}\PYG{p}{,} \PYG{n}{k} \PYG{o+ow}{in} \PYG{n+nb}{enumerate}\PYG{p}{(}\PYG{n}{layers}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{:]):}
            \PYG{n}{nn}\PYG{o}{.}\PYG{n}{biases}\PYG{p}{[}\PYG{n}{i}\PYG{p}{]} \PYG{o}{=} \PYG{n}{np}\PYG{o}{.}\PYG{n}{reshape}\PYG{p}{(}\PYG{n}{genome}\PYG{p}{[}\PYG{n}{offset}\PYG{p}{:}\PYG{n}{offset} \PYG{o}{+} \PYG{n}{k}\PYG{p}{],} \PYG{p}{(}\PYG{n}{k}\PYG{p}{,} \PYG{l+m+mi}{1}\PYG{p}{))}
            \PYG{n}{offset} \PYG{o}{+=} \PYG{n}{k}
\PYG{+w}{        }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{        genome = list(reversed(genome))}
\PYG{l+s+sd}{        nn.weights = [np.array([[genome.pop() for \PYGZus{} in range(j)] for \PYGZus{} in range(i)]) for (i, j) in zip(nn.layers\PYGZus{}sizes[1:], nn.layers\PYGZus{}sizes[:\PYGZhy{}1])]}
\PYG{l+s+sd}{        nn.biases = [np.array([genome.pop() for \PYGZus{} in range(i)]) for i in nn.layers\PYGZus{}sizes[1:]]}
\PYG{l+s+sd}{        \PYGZdq{}\PYGZdq{}\PYGZdq{}}
        \PYG{k}{return} \PYG{n}{nn}
\end{Verbatim}
